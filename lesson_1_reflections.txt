How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was pretty easy to check for differences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Going back to remove undesired changes or compare new vs old would be
    faster and therefore more efficient.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros - Can right-size commits, create commit messages
    Cons - No control of frequency or logical-ness of commits

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Some are specialized for coding and others are not.

How can you use the commands git log and git diff to view the history of files?

    Use git log to find the commit IDs of all commits then use git diff to view
    the differences between two commits.

How might using version control make you more confident to make changes that
could break something?

    You can be confident that you can return to a previous commit containing 
    Unbroken code.

Now that you have your workspace set up, what do you want to try using Git for?

    Version control.